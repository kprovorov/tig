version: '3'
services:
  telegraf:
    image: telegraf:1.20-alpine
    user: '0'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - './telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro'
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
      - '8125:8125/udp'

  influxdb:
    image: influxdb:1.8-alpine
    user: '0'
    env_file: .env
    ports:
      - '8086:8086'
    volumes:
      - './influxdb/data:/var/lib/influxdb'

  grafana:
    image: grafana/grafana:8.2.2
    user: '0'
    depends_on:
      - influxdb
    env_file: .env
    links:
      - influxdb
    ports:
      - "3000:3000"
    volumes:
      - './grafana/data/:/var/lib/grafana'
      - './grafana/provisioning/:/etc/grafana/provisioning/'
      - './grafana/dashboards/:/var/lib/grafana/dashboards/'

  postgres:
    image: 'postgres:14-alpine'
    user: '0'
    env_file: .env
    ports:
      - '5432:5432'
    volumes:
      - './postgres/data:/var/lib/postgresql/data'
      - './postgres/migration.sql:/docker-entrypoint-initdb.d/migration.sql' # run migration
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}" ]
      retries: 3
      timeout: 5s

  app:
    build:
      context: .
    user: '0'
    ports:
      - '8080:8080'
